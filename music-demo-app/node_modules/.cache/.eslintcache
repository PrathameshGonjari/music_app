[{"F:\\Git\\music_app\\music-demo-app\\src\\index.tsx":"1","F:\\Git\\music_app\\music-demo-app\\src\\reportWebVitals.ts":"2","F:\\Git\\music_app\\music-demo-app\\src\\App.tsx":"3","F:\\Git\\music_app\\music-demo-app\\src\\routes\\index.tsx":"4","F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\NavigationBar.tsx":"5","F:\\Git\\music_app\\music-demo-app\\src\\pages\\MainPage\\index.tsx":"6","F:\\Git\\music_app\\music-demo-app\\src\\shared\\constant\\typography\\Typography.tsx":"7","F:\\Git\\music_app\\music-demo-app\\src\\pages\\MainPage\\helper.ts":"8","F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\SearchBar.tsx":"9","F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\Loader.tsx":"10","F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\MusicPlayer\\index.tsx":"11","F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\MusicCard\\index.tsx":"12","F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\MusicPlayer\\style.ts":"13","F:\\Git\\music_app\\music-demo-app\\src\\services\\index.tsx":"14","F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\MusicCard\\style.ts":"15"},{"size":573,"mtime":1686858856250,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1686858856265,"results":"18","hashOfConfig":"17"},{"size":269,"mtime":1686858856250,"results":"19","hashOfConfig":"17"},{"size":365,"mtime":1686858856265,"results":"20","hashOfConfig":"17"},{"size":2943,"mtime":1686858856265,"results":"21","hashOfConfig":"17"},{"size":3267,"mtime":1687606412750,"results":"22","hashOfConfig":"17"},{"size":901,"mtime":1686858856265,"results":"23","hashOfConfig":"17"},{"size":1043,"mtime":1687013278118,"results":"24","hashOfConfig":"17"},{"size":669,"mtime":1686858856265,"results":"25","hashOfConfig":"17"},{"size":196,"mtime":1686858856265,"results":"26","hashOfConfig":"17"},{"size":8009,"mtime":1687103393185,"results":"27","hashOfConfig":"17"},{"size":2613,"mtime":1687606288468,"results":"28","hashOfConfig":"17"},{"size":347,"mtime":1686858856265,"results":"29","hashOfConfig":"17"},{"size":1143,"mtime":1687097925066,"results":"30","hashOfConfig":"17"},{"size":326,"mtime":1686858856265,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1oewf4b",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"F:\\Git\\music_app\\music-demo-app\\src\\index.tsx",[],[],[],"F:\\Git\\music_app\\music-demo-app\\src\\reportWebVitals.ts",[],[],"F:\\Git\\music_app\\music-demo-app\\src\\App.tsx",[],[],"F:\\Git\\music_app\\music-demo-app\\src\\routes\\index.tsx",[],[],"F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\NavigationBar.tsx",[],[],"F:\\Git\\music_app\\music-demo-app\\src\\pages\\MainPage\\index.tsx",["79","80"],[],"F:\\Git\\music_app\\music-demo-app\\src\\shared\\constant\\typography\\Typography.tsx",[],[],"F:\\Git\\music_app\\music-demo-app\\src\\pages\\MainPage\\helper.ts",[],[],"F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\SearchBar.tsx",[],[],"F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\Loader.tsx",[],[],"F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\MusicPlayer\\index.tsx",["81","82","83"],[],"import { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Forward10Icon from \"@mui/icons-material/Forward10\";\r\nimport PauseCircleIcon from \"@mui/icons-material/PauseCircle\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport Replay10Icon from \"@mui/icons-material/Replay10\";\r\nimport StopCircleIcon from \"@mui/icons-material/StopCircle\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nimport { musicListTypes } from \"../../../pages/MainPage/type\";\r\nimport {\r\n  H5Typography,\r\n  SubTitleTypography,\r\n} from \"../../constant/typography/Typography\";\r\nimport { TinyText, Wrapper } from \"./style\";\r\n\r\ninterface MusicPlayerProps {\r\n  music: musicListTypes;\r\n  onStopButtonClick: any;\r\n\r\n}\r\n\r\nexport default function MusicPlayer(props: MusicPlayerProps) {\r\n  const { music, onStopButtonClick } = props;\r\n  const [position, setPosition] = useState(0);\r\n  const [playMusic, setPlayMusic] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [duration, setDuration] = useState<number>(0); //seconds\r\n  const audioPlayer: any = useRef(); //refrence for audion component\r\n  const progressBar: any = useRef(); //refrence for progress bar\r\n  const animationRef: any = useRef(); //refrence for animation\r\n\r\n  useEffect(() => {\r\n    const seconds: number = Math.floor(audioPlayer?.current?.duration);\r\n    if (seconds && !isNaN(seconds)) {\r\n      setDuration(seconds);\r\n    }\r\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\r\n\r\n  useEffect(() => {\r\n    setPlayMusic(true)\r\n    togglePlayPause();\r\n  }, [music.trackId]);\r\n\r\n  const theme = useTheme();\r\n\r\n  const formatDuration = (value: number) => {\r\n    const minute = Math.floor(value / 60);\r\n    const secondLeft = value - minute * 60;\r\n    return `${minute}:${secondLeft < 10 ? `0${secondLeft}` : secondLeft}`;\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    setPlayMusic((pre: boolean) => {\r\n      if (pre) {\r\n        audioPlayer?.current?.play(); //play the audio\r\n        animationRef.current = requestAnimationFrame(whilePlaying);\r\n      } else {\r\n        audioPlayer?.current?.pause(); //pause the audio\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n      return !pre\r\n    }\r\n    );\r\n  };\r\n\r\n  const changeRange = (event: any) => {\r\n    const value = event?.target?.value;\r\n    audioPlayer.current.currentTime = value;\r\n    setPosition(Math.floor(value));\r\n  };\r\n\r\n  const replayMusic = () => {\r\n    progressBar.current.value = Number(progressBar?.current?.value - 10);\r\n    audioPlayer.current.currentTime = progressBar?.current?.value;\r\n    setPosition(Math.floor(progressBar.current.value));\r\n  };\r\n\r\n  const forwardMusic = () => {\r\n    progressBar.current.value = Number(progressBar?.current?.value + 10);\r\n    audioPlayer.current.currentTime = progressBar?.current?.value;\r\n    setPosition(Math.floor(progressBar.current.value));\r\n  };\r\n\r\n  const whilePlaying = () => {\r\n    progressBar.current.value = audioPlayer?.current?.currentTime;\r\n    setPosition(Math.floor(progressBar?.current?.value));\r\n    animationRef.current = requestAnimationFrame(whilePlaying);\r\n  };\r\n\r\n  const handleStopButton = () => {\r\n    onStopButtonClick();\r\n    audioPlayer.current.pause();\r\n    progressBar.current.value = 0;\r\n    audioPlayer.current.currentTime = 0;\r\n    setPosition(Math.floor(0));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Card sx={{ display: \"flex\" }}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            minWidth: \"70%\",\r\n            maxWidth: \"70%\",\r\n          }}\r\n        >\r\n          <CardContent sx={{ flex: \"1 0 auto\" }}>\r\n            <audio\r\n              ref={audioPlayer}\r\n              src={music.previewUrl}\r\n              preload=\"metadata\"\r\n            ></audio>\r\n            <H5Typography\r\n              sx={{\r\n                display: \"-webkit-box\",\r\n                overflow: \"hidden\",\r\n                WebkitBoxOrient: \"vertical\",\r\n                WebkitLineClamp: 2,\r\n              }}\r\n              text={music.trackName}\r\n            />\r\n            <SubTitleTypography\r\n              sx={{\r\n                display: \"-webkit-box\",\r\n                overflow: \"hidden\",\r\n                WebkitBoxOrient: \"vertical\",\r\n                WebkitLineClamp: 2,\r\n              }}\r\n              text={music.artistName}\r\n            />\r\n          </CardContent>\r\n\r\n          <Box sx={{ display: \"flex\", alignItems: \"center\", pl: 1, pb: 1 }}>\r\n            <IconButton onClick={replayMusic}>\r\n              <Replay10Icon sx={{ height: 38, width: 38, color: \"black\" }} />\r\n            </IconButton>\r\n            <IconButton onClick={togglePlayPause} aria-label=\"play/pause\">\r\n              {playMusic ? (\r\n                <PlayArrowIcon sx={{ height: 38, width: 38, color: \"black\" }} />\r\n              ) : (\r\n                <PauseCircleIcon\r\n                  sx={{ height: 38, width: 38, color: \"black\" }}\r\n                />\r\n              )}\r\n            </IconButton>\r\n            {!playMusic && (\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleStopButton();\r\n                  setPlayMusic((pre) => !pre);\r\n                }}\r\n                aria-label=\"play/pause\"\r\n              >\r\n                <StopCircleIcon sx={{ height: 38, width: 38 }} />\r\n              </IconButton>\r\n            )}\r\n            <IconButton onClick={forwardMusic}>\r\n              <Forward10Icon sx={{ height: 38, width: 38, color: \"black\" }} />\r\n            </IconButton>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                minWidth: \"70%\",\r\n                maxWidth: \"70%\",\r\n              }}\r\n            >\r\n              <Slider\r\n                ref={progressBar}\r\n                aria-label=\"time-indicator\"\r\n                size=\"small\"\r\n                value={position}\r\n                min={0}\r\n                step={1}\r\n                max={duration}\r\n                onChange={changeRange}\r\n                sx={{\r\n                  color:\r\n                    theme.palette.mode === \"dark\" ? \"#fff\" : \"rgba(0,0,0,0.87)\",\r\n                  height: 4,\r\n                  \"& .MuiSlider-thumb\": {\r\n                    width: 8,\r\n                    height: 8,\r\n                    transition: \"0.3s cubic-bezier(.47,1.64,.41,.8)\",\r\n                    \"&:before\": {\r\n                      boxShadow: \"0 2px 12px 0 rgba(0,0,0,0.4)\",\r\n                    },\r\n                    \"&:hover, &.Mui-focusVisible\": {\r\n                      boxShadow: `0px 0px 0px 8px ${theme.palette.mode === \"dark\"\r\n                        ? \"rgb(255 255 255 / 16%)\"\r\n                        : \"rgb(0 0 0 / 16%)\"\r\n                        }`,\r\n                    },\r\n                    \"&.Mui-active\": {\r\n                      width: 20,\r\n                      height: 20,\r\n                    },\r\n                  },\r\n                  \"& .MuiSlider-rail\": {\r\n                    opacity: 0.28,\r\n                  },\r\n                }}\r\n              />\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  mt: -2,\r\n                }}\r\n              >\r\n                <TinyText>{formatDuration(position)}</TinyText>\r\n                <TinyText>-{formatDuration(duration - position)}</TinyText>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <CardMedia\r\n          component=\"img\"\r\n          sx={{ width: \"25%\" }}\r\n          image={music.artworkUrl100}\r\n          alt=\"Album Cover\"\r\n        />\r\n      </Card>\r\n    </Wrapper>\r\n  );\r\n}\r\n","F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\MusicCard\\index.tsx",["84","85","86"],[],"F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\MusicPlayer\\style.ts",[],[],"F:\\Git\\music_app\\music-demo-app\\src\\services\\index.tsx",[],[],"F:\\Git\\music_app\\music-demo-app\\src\\shared\\molecules\\MusicCard\\style.ts",[],[],{"ruleId":"87","severity":1,"message":"88","line":20,"column":22,"nodeType":"89","messageId":"90","endLine":20,"endColumn":35},{"ruleId":"91","severity":1,"message":"92","line":34,"column":6,"nodeType":"93","endLine":34,"endColumn":8,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":33,"column":10,"nodeType":"89","messageId":"90","endLine":33,"endColumn":17},{"ruleId":"87","severity":1,"message":"96","line":33,"column":19,"nodeType":"89","messageId":"90","endLine":33,"endColumn":29},{"ruleId":"91","severity":1,"message":"97","line":49,"column":6,"nodeType":"93","endLine":49,"endColumn":21,"suggestions":"98"},{"ruleId":"87","severity":1,"message":"99","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":18},{"ruleId":"87","severity":1,"message":"100","line":1,"column":20,"nodeType":"89","messageId":"90","endLine":1,"endColumn":29},{"ruleId":"87","severity":1,"message":"101","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":22},"@typescript-eslint/no-unused-vars","'setQueryParam' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'togglePlayPause'. Either include it or remove the dependency array.",["103"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'StopCircleIcon' is defined but never used.",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [filter]",{"range":"108","text":"109"},"Update the dependencies array to be: [music.trackId, togglePlayPause]",{"range":"110","text":"111"},[1130,1132],"[filter]",[1865,1880],"[music.trackId, togglePlayPause]"]